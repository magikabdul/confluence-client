/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContentRestrictionUpdateRestrictionsGroupInner;
import org.openapitools.client.model.ContentRestrictionUpdateRestrictionsUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The users/groups that the restrictions will be applied to. At least one of &#x60;user&#x60; or &#x60;group&#x60; must be specified for this object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-01T01:00:55.766609049+02:00[Europe/Warsaw]")
public class ContentRestrictionUpdateRestrictions {
  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private List<ContentRestrictionUpdateRestrictionsGroupInner> group;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private ContentRestrictionUpdateRestrictionsUser user;

  public ContentRestrictionUpdateRestrictions() {
  }

  public ContentRestrictionUpdateRestrictions group(List<ContentRestrictionUpdateRestrictionsGroupInner> group) {
    this.group = group;
    return this;
  }

  public ContentRestrictionUpdateRestrictions addGroupItem(ContentRestrictionUpdateRestrictionsGroupInner groupItem) {
    if (this.group == null) {
      this.group = new ArrayList<>();
    }
    this.group.add(groupItem);
    return this;
  }

   /**
   * The groups that the restrictions will be applied to. This array must have at least one item, otherwise it should be omitted. At least one of &#x60;name&#x60; or &#x60;id&#x60; is required, and &#x60;id&#x60; should be used where possible in advance of the &#x60;name&#x60; deprecation.
   * @return group
  **/
  @javax.annotation.Nullable
  public List<ContentRestrictionUpdateRestrictionsGroupInner> getGroup() {
    return group;
  }

  public void setGroup(List<ContentRestrictionUpdateRestrictionsGroupInner> group) {
    this.group = group;
  }


  public ContentRestrictionUpdateRestrictions user(ContentRestrictionUpdateRestrictionsUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  public ContentRestrictionUpdateRestrictionsUser getUser() {
    return user;
  }

  public void setUser(ContentRestrictionUpdateRestrictionsUser user) {
    this.user = user;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentRestrictionUpdateRestrictions contentRestrictionUpdateRestrictions = (ContentRestrictionUpdateRestrictions) o;
    return Objects.equals(this.group, contentRestrictionUpdateRestrictions.group) &&
        Objects.equals(this.user, contentRestrictionUpdateRestrictions.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(group, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentRestrictionUpdateRestrictions {\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("group");
    openapiFields.add("user");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ContentRestrictionUpdateRestrictions
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentRestrictionUpdateRestrictions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentRestrictionUpdateRestrictions is not found in the empty JSON string", ContentRestrictionUpdateRestrictions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentRestrictionUpdateRestrictions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentRestrictionUpdateRestrictions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) {
        JsonArray jsonArraygroup = jsonObj.getAsJsonArray("group");
        if (jsonArraygroup != null) {
          // ensure the json data is an array
          if (!jsonObj.get("group").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `group` to be an array in the JSON string but got `%s`", jsonObj.get("group").toString()));
          }

          // validate the optional field `group` (array)
          for (int i = 0; i < jsonArraygroup.size(); i++) {
            ContentRestrictionUpdateRestrictionsGroupInner.validateJsonElement(jsonArraygroup.get(i));
          };
        }
      }
      // validate the optional field `user`
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        ContentRestrictionUpdateRestrictionsUser.validateJsonElement(jsonObj.get("user"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentRestrictionUpdateRestrictions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentRestrictionUpdateRestrictions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentRestrictionUpdateRestrictions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentRestrictionUpdateRestrictions.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentRestrictionUpdateRestrictions>() {
           @Override
           public void write(JsonWriter out, ContentRestrictionUpdateRestrictions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentRestrictionUpdateRestrictions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ContentRestrictionUpdateRestrictions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ContentRestrictionUpdateRestrictions
  * @throws IOException if the JSON string is invalid with respect to ContentRestrictionUpdateRestrictions
  */
  public static ContentRestrictionUpdateRestrictions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentRestrictionUpdateRestrictions.class);
  }

 /**
  * Convert an instance of ContentRestrictionUpdateRestrictions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

